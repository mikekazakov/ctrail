matrix:
  include:
    # Linux / GCC7 / Release  
    - os: linux
      dist: bionic
      compiler: gcc
      language: python
      python: "3.6"            
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages: g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - CMAKE_BUILD_TYPE=Release

    # Linux / GCC8 / Release  
    - os: linux
      dist: bionic
      compiler: gcc
      language: python
      python: "3.6"            
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages: g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
        - CMAKE_BUILD_TYPE=Release
    
    # Linux / GCC8 / ASAN (Release)      
    - os: linux
      dist: bionic
      compiler: gcc
      language: python
      python: "3.6"            
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages: g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
        - CMAKE_BUILD_TYPE=Release
        - CMAKE_CXX_FLAGS="-fsanitize=address -fno-omit-frame-pointer"
        - ASAN_OPTIONS="verbosity=1"

    # Linux / GCC8 / GCOV (Release)      
    - os: linux
      dist: bionic
      compiler: gcc
      language: python
      python: "3.6"            
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages: g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
        - CMAKE_BUILD_TYPE=Debug
        - CMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage"
        - CMAKE_EXE_LINKER_FLAGS="--coverage"
        - ASAN_OPTIONS="verbosity=1"
      after_success:
        - bash <(curl -s https://codecov.io/bash)

    # Linux / GCC8 / Debug
    - os: linux
      dist: bionic
      compiler: gcc
      language: python
      python: "3.6"
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages: g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
        - CMAKE_BUILD_TYPE=Debug

    # macOS / Xcode10 / Release  
    - os: osx
      osx_image: xcode11
      compiler: clang
      brew_packages: python
      env:
        - MATRIX_EVAL=""
        - CMAKE_BUILD_TYPE=Release

before_install:
  - eval "${MATRIX_EVAL}"
install:
  - pip install conan
  - conan user
script:
  - mkdir build
  - cd build
  - conan install ..
  - cmake .. -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} -DCMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS}" -DCMAKE_EXE_LINKER_FLAGS="${CMAKE_EXE_LINKER_FLAGS}"
  - cmake --build .
  - ctest -V .
