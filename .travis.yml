matrix:
  include:   
    - name: "Linux / GCC7 / Release" 
      os: linux
      dist: bionic
      compiler: gcc
      language: python
      python: "3.6"
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages: g++-7
      env:
        - CC=gcc-7
        - CXX=g++-7
      install:
        - pip install conan
        - conan user
      script:
        - mkdir build && cd build
        - conan install ..
        - cmake .. -DCMAKE_BUILD_TYPE=Release
        - cmake --build . --parallel 2
        - ctest -V .

    - name: "Linux / GCC8 / Release"
      os: linux
      dist: bionic
      compiler: gcc
      language: python
      python: "3.6"            
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages: g++-8
      env:
        - CC=gcc-8
        - CXX=g++-8          
      install:
        - pip install conan
        - conan user
      script:
        - mkdir build && cd build
        - conan install ..
        - cmake .. -DCMAKE_BUILD_TYPE=Release
        - cmake --build . --parallel 2
        - ctest -V .        

    - name: "Linux / GCC8 / Release / ASAN"
      os: linux
      dist: bionic
      compiler: gcc
      language: python
      python: "3.6"            
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages: g++-8
      env:
        - CC=gcc-8
        - CXX=g++-8
        - ASAN_OPTIONS="verbosity=1"
      install:
        - pip install conan
        - conan user
      script:
        - mkdir build && cd build
        - conan install ..
        - cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="-fsanitize=address -fno-omit-frame-pointer" -DCMAKE_EXE_LINKER_FLAGS="-fsanitize=address"
        - cmake --build . --parallel 2
        - ctest -V .

    - name: "Linux / GCC8 / Release / UBSAN"
      os: linux
      dist: bionic
      compiler: gcc
      language: python
      python: "3.6"            
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages: g++-8
      env:
        - CC=gcc-8
        - CXX=g++-8
      install:
        - pip install conan
        - conan user
      script:
        - mkdir build && cd build
        - conan install ..
        - cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="-fsanitize=undefined" -DCMAKE_EXE_LINKER_FLAGS="-fsanitize=undefined"
        - cmake --build . --parallel 2
        - ctest -V .        

    - name: "Linux / GCC8 / Debug / GCOV"
      os: linux
      dist: bionic
      compiler: gcc
      language: python
      python: "3.6"            
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages: g++-8
      env:
        - CC=gcc-8
        - CXX=g++-8
      install:
        - pip install conan
        - conan user
      script:
        - mkdir build && cd build
        - conan install ..
        - cmake .. -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" -DCMAKE_EXE_LINKER_FLAGS="--coverage"
        - cmake --build . --parallel 2
        - ctest -V .        
      after_success:
        - bash <(curl -s https://codecov.io/bash)

    - name: "Linux / GCC8 / Single source file"
      os: linux
      dist: bionic
      compiler: gcc
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages: g++-8
      env:
        - CC=gcc-8
        - CXX=g++-8
      script:
        - mkdir build && cd build
        - g++ -std=c++17 -I../include ../src/CTrail-all.cpp -c
        - g++ -std=c++17 -I../include ../examples/async.cpp CTrail-all.o -pthread -o async

    - name: "macOS / Xcode11 / Release"
      os: osx
      osx_image: xcode11
      compiler: clang
      brew_packages: python
      install:
        - pip install conan
        - conan user
      script:
        - mkdir build && cd build
        - conan install ..
        - cmake .. -DCMAKE_BUILD_TYPE=Release
        - cmake --build . --parallel 2
        - ctest -V .
